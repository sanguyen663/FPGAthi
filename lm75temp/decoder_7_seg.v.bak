module decoder_7_seg(
	input CLK,
   input [3:0] D,
	input [3:0] digit_posn,
   output reg [7:0] SEG
   );

always @(posedge CLK) 
begin
	case(D)
    4'd0: if(digit_posn==3)
	 begin
	 SEG <= 8'b00000000;				// decimal
	 end
	 else SEG <= 8'b00000011;
    4'd1: if(digit_posn==3)		
	 begin
	 SEG <= 8'b10011100;				//decimal
	 end
	 else SEG <= 8'b10011111;		
    4'd2: if(digit_posn==3)
	 begin
	 SEG <= 8'b00100100;				//decimal
	 end
	 else SEG <= 8'b00100101;
    4'd3: if(digit_posn==3)
	 begin
	 SEG <= 8'b00001100;				//decimal
	 end
	 else SEG <= 8'b00001101;
    4'd4: if(digit_posn==3)
	 begin
	 SEG <= 8'b10011000;				//decimal
	 end
	 else SEG <= 8'b10011001;
    4'd5: if(digit_posn==3)
	 begin
	 SEG <= 8'b01001000;				//decimal
	 end
	 else SEG <= 8'b01001001;
    4'd6: if(digit_posn==3)
	 begin
	 SEG <= 8'b01000000;				//decimal
	 end
	 else SEG <= 8'b01000001;
    4'd7: if(digit_posn==3)
	 begin
	 SEG <= 8'b00011110;				//decimal
	 end
	 else SEG <= 8'b00011111;
    4'd8: if(digit_posn==3)
	 begin
	 SEG <= 8'b00000000;				//decimal
	 end
	 else SEG <= 8'b00000001;
    4'd9: if(digit_posn==3)
	 begin
	 SEG <= 8'b00001000;				//decimal
	 end
	 else SEG <= 8'b00001001;
    default: SEG <= 8'b11111111;
	endcase
end

endmodule
